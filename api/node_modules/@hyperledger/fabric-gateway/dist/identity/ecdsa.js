"use strict";
/*
 * Copyright 2023 IBM All Rights Reserved.
 *
 * SPDX-License-Identifier: Apache-2.0
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.newECPrivateKeySigner = void 0;
const p256_1 = require("@noble/curves/p256");
const p384_1 = require("@noble/curves/p384");
const namedCurves = {
    'P-256': p256_1.p256,
    'P-384': p384_1.p384,
};
function newECPrivateKeySigner(key) {
    const { crv, d } = key.export({ format: 'jwk' });
    if (!d) {
        throw new Error('Missing EC private key value');
    }
    const curve = getCurve(crv);
    const privateKey = Buffer.from(d, 'base64url');
    return (digest) => {
        const signature = curve.sign(digest, privateKey, { lowS: true }).toDERRawBytes();
        return Promise.resolve(signature);
    };
}
exports.newECPrivateKeySigner = newECPrivateKeySigner;
function getCurve(name = String(undefined)) {
    const curve = namedCurves[name];
    if (!curve) {
        throw new Error(`Unsupported curve: ${name}`);
    }
    return curve;
}
//# sourceMappingURL=ecdsa.js.map